(ns clj-majorclust.importer-test
  (:require [clojure.test :refer :all]
            [clj-majorclust.importer :as gi]
            [loom.graph :refer :all]
            [clj-majorclust.core :refer :all]))


(deftest test-import-txt-graph
   (testing "read txt file into graph"
            (let [graph (gi/import-txt-vector-file "./resources/jain_cluster_data.txt")]
              (is (= 373 (count (nodes graph)))))))

(deftest test-assignment-fn-import-txt-graph
  (testing "Should get assignment function from majorclust"
    (let [graph (gi/import-txt-vector-file "./resources/jain_cluster_data.txt")
          assignment-fn (do-majorclust graph)]
      (is (= assignment-fn {0 47, 357 251, 275 29, 291 29, 249 29, 299 29, 121 251, 287 29, 65 245, 70 245, 218 251, 62 245, 74 245, 164 251, 282 29, 273 29, 186 251, 370 251, 233 251, 298 29, 188 251, 240 251, 110 251, 130 251, 311 29, 128 251, 259 29, 210 251, 229 251, 153 251, 213 251, 343 251, 7 245, 59 245, 86 245, 154 251, 20 245, 224 251, 355 251, 72 245, 58 245, 205 251, 60 245, 175 251, 322 251, 27 245, 352 251, 1 245, 69 245, 101 251, 24 245, 102 251, 135 251, 354 251, 360 251, 55 245, 269 251, 206 251, 165 251, 85 245, 225 251, 297 251, 39 245, 274 232, 88 245, 217 251, 46 245, 149 251, 239 251, 157 251, 345 251, 300 251, 4 245, 204 251, 77 245, 106 251, 197 251, 232 251, 260 232, 267 251, 119 251, 319 251, 222 251, 293 251, 95 251, 329 251, 144 251, 176 251, 349 251, 192 251, 54 245, 92 242, 221 251, 141 251, 307 232, 290 251, 361 251, 264 251, 137 251, 356 251, 327 251, 234 251, 104 251, 353 251, 15 251, 48 245, 242 251, 50 245, 251 232, 116 251, 75 245, 159 251, 99 251, 281 232, 309 251, 21 245, 31 245, 113 251, 32 245, 136 251, 139 251, 174 251, 331 251, 363 251, 284 232, 208 251, 305 251, 182 251, 256 232, 214 251, 193 251, 241 251, 314 251, 226 251, 235 251, 262 251, 263 251, 304 251, 40 245, 129 251, 317 251, 294 251, 91 301, 364 251, 341 251, 117 251, 172 251, 108 251, 156 251, 358 251, 308 251, 223 251, 365 251, 181 251, 278 232, 56 245, 33 245, 13 245, 22 245, 257 232, 338 251, 168 251, 347 251, 90 245, 237 251, 292 251, 109 251, 216 251, 191 251, 367 251, 143 251, 178 251, 247 251, 328 251, 167 251, 36 245, 41 245, 187 251, 195 251, 316 251, 303 251, 368 251, 310 251, 366 251, 118 251, 150 251, 313 251, 238 251, 196 251, 162 251, 184 251, 219 251, 89 245, 100 251, 351 251, 243 251, 131 251, 122 251, 43 245, 231 251, 61 245, 29 245, 151 251, 369 251, 348 251, 44 245, 258 232, 250 232, 301 251, 93 251, 6 245, 111 251, 28 245, 134 251, 64 245, 334 251, 323 251, 189 251, 280 232, 198 251, 155 251, 295 251, 248 232, 285 232, 227 251, 220 251, 103 251, 170 251, 51 245, 25 245, 261 232, 201 251, 166 251, 34 245, 252 251, 325 251, 146 251, 228 251, 306 251, 125 251, 276 251, 340 251, 148 251, 17 245, 312 251, 3 245, 286 251, 279 251, 12 253, 332 251, 330 251, 152 251, 342 351, 2 245, 66 301, 236 251, 142 251, 359 351, 371 351, 107 351, 23 301, 230 351, 47 301, 180 351, 158 351, 350 351, 35 301, 127 351, 302 332, 82 351, 76 301, 215 351, 97 251, 277 332, 19 301, 335 351, 57 301, 202 351, 68 301, 200 351, 11 245, 115 351, 339 351, 337 351, 255 351, 9 245, 145 351, 5 301, 244 351, 289 332, 112 351, 179 351, 344 351, 245 351, 266 332, 324 351, 254 351, 283 332, 83 301, 138 351, 346 351, 14 251, 265 332, 333 351, 326 351, 45 251, 53 316, 78 351, 315 351, 132 351, 26 367, 123 351, 203 351, 140 351, 321 351, 268 351, 16 301, 320 351, 133 351, 288 332, 163 351, 81 351, 120 351, 79 351, 211 351, 38 367, 173 351, 126 351, 98 351, 124 351, 171 351, 87 351, 169 351, 160 351, 30 367, 207 351, 194 351, 73 351, 336 351, 96 351, 10 245, 272 351, 270 351, 271 351, 18 301, 105 351, 185 351, 52 367, 114 351, 253 351, 209 351, 147 351, 67 351, 296 370, 318 370, 161 351, 372 370, 71 351, 42 251, 80 351, 199 351, 37 367, 183 351, 63 251, 212 351, 94 351, 362 370, 8 245, 246 351, 190 351, 177 351, 49 251, 84 351})))))

  (deftest test-get-clusters-import-txt-graph
  (testing "Should get two clusters jain cluster data set"
    (let [graph (gi/import-txt-vector-file "./resources/jain_cluster_data.txt")
          assignment-fn (do-majorclust graph)
          clusters (get-clusters assignment-fn)]
      (is (= 13 (count (keys clusters)))))))